/* Overall application styling */
.App {
  text-align: center;
  font-family: 'Roboto', sans-serif; /* Google's preferred font */
  background-color: #f5f5f5; /* Light grey background for the entire app */
  color: #202124; /* Slightly off-black text for easier reading */
  padding: 16px; /* Padding around the app content */
}

/* Header styling */
.App-header {
  background-color: #fff; /* White background for header */
  color: #202124; /* Text color for header */
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* Align items to the start */
  justify-content: flex-start; /* Justify content to the start */
  padding: 16px; /* Padding around the header content */
  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12); /* Subtle shadow for header */
  margin-bottom: 16px; /* Margin below the header */
}

.App-link {
  color: #1a73e8; /* Google's link color */
}

/* Adding margin to the main content area */
.main-content {
  margin: 0 auto; /* Center the content */
  max-width: 1200px; /* Max width for the main content */
}

/* Card styling */
.MuiPaper-root {
  padding: 16px; /* Padding inside the cards */
  margin: 8px; /* Margin around the cards */
  background-color: #fff; /* White background for cards */
  border-radius: 8px; /* Rounded corners for cards */
  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1); /* Subtle shadow for cards */
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100%; /* Make cards take full height of the grid item */
}

/* Table adjustments for a cleaner look */
.TableContainer {
  box-shadow: none; /* Removing box shadow for a flatter design */
}

.TableHead {
  background-color: #f8f9fa; /* Light grey background for the table header */
}

.TableRow {
  border-bottom: 1px solid #e0e0e0; /* Lighter border for rows */
}

.TableCell, .TableSortLabel {
  font-weight: normal; /* Less bold fonts */
  color: #202124; /* Matching Google's text color */
}

/* Icons and buttons adjustments */
.IconButton {
  color: #5f6368; /* Muted icon color */
}

/* More specific adjustments can be added as needed */
.verticalText {
  writing-mode: vertical-rl; /* This will make the text vertical */
  text-align: center; /* Centers text vertically, might need adjustment based on overall cell styling */
  transform: rotate(0deg); /* Optional: Rotates the text if you want it in the opposite direction */
}

.horizontalContainer {
  display: flex; /* This makes the child elements (divs) layout horizontally */
  justify-content: flex-end; /* Aligns the children to the right; adjust as needed */
  align-items: center; /* Centers the items vertically within the container, if needed */
}
